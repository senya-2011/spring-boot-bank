/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardCreateRequest model module.
 * @module model/CardCreateRequest
 * @version v0
 */
class CardCreateRequest {
    /**
     * Constructs a new <code>CardCreateRequest</code>.
     * @alias module:model/CardCreateRequest
     * @param cardNumberPlain {String} 
     * @param ownerName {String} 
     * @param expiry {Date} 
     * @param status {module:model/CardCreateRequest.StatusEnum} 
     */
    constructor(cardNumberPlain, ownerName, expiry, status) { 
        
        CardCreateRequest.initialize(this, cardNumberPlain, ownerName, expiry, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cardNumberPlain, ownerName, expiry, status) { 
        obj['cardNumberPlain'] = cardNumberPlain;
        obj['ownerName'] = ownerName;
        obj['expiry'] = expiry;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>CardCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardCreateRequest} obj Optional instance to populate.
     * @return {module:model/CardCreateRequest} The populated <code>CardCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardCreateRequest();

            if (data.hasOwnProperty('cardNumberPlain')) {
                obj['cardNumberPlain'] = ApiClient.convertToType(data['cardNumberPlain'], 'String');
            }
            if (data.hasOwnProperty('ownerName')) {
                obj['ownerName'] = ApiClient.convertToType(data['ownerName'], 'String');
            }
            if (data.hasOwnProperty('expiry')) {
                obj['expiry'] = ApiClient.convertToType(data['expiry'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CardCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cardNumberPlain'] && !(typeof data['cardNumberPlain'] === 'string' || data['cardNumberPlain'] instanceof String)) {
            throw new Error("Expected the field `cardNumberPlain` to be a primitive type in the JSON string but got " + data['cardNumberPlain']);
        }
        // ensure the json data is a string
        if (data['ownerName'] && !(typeof data['ownerName'] === 'string' || data['ownerName'] instanceof String)) {
            throw new Error("Expected the field `ownerName` to be a primitive type in the JSON string but got " + data['ownerName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

CardCreateRequest.RequiredProperties = ["cardNumberPlain", "ownerName", "expiry", "status"];

/**
 * @member {String} cardNumberPlain
 */
CardCreateRequest.prototype['cardNumberPlain'] = undefined;

/**
 * @member {String} ownerName
 */
CardCreateRequest.prototype['ownerName'] = undefined;

/**
 * @member {Date} expiry
 */
CardCreateRequest.prototype['expiry'] = undefined;

/**
 * @member {module:model/CardCreateRequest.StatusEnum} status
 */
CardCreateRequest.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CardCreateRequest['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "BLOCKED"
     * @const
     */
    "BLOCKED": "BLOCKED",

    /**
     * value: "EXPIRED"
     * @const
     */
    "EXPIRED": "EXPIRED"
};



export default CardCreateRequest;

